name: CI/CD

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [18.x]
    steps:
    - uses: actions/checkout@v3
    
    - name: Setup Node.js
      uses: actions/setup-node@v3
      with:
        node-version: ${{ matrix.node-version }}
    
    - name: Install Root Dependencies
      run: |
        npm ci
        npm list || true
    
    - name: Install Client Dependencies
      working-directory: ./client
      run: |
        echo "Installing client dependencies..."
        npm ci --legacy-peer-deps
        npm list || true
      
    - name: Build Client
      working-directory: ./client
      run: |
        echo "Building client..."
        npm run build
      env:
        CI: false
    
    - name: Install Server Dependencies
      working-directory: ./server
      run: |
        echo "Installing server dependencies..."
        npm ci
        npm list || true
    
    - name: Build Server
      working-directory: ./server
      run: |
        echo "Building server..."
        npm run build

  deploy:
    needs: build
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    
    steps:
    - uses: actions/checkout@v3

    - name: Setup Node.js
      uses: actions/setup-node@v3
      with:
        node-version: 18

    # Deploy client to Vercel
    - name: Deploy Client to Vercel
      working-directory: ./client
      run: |
        echo "Installing Vercel CLI..."
        npm i -g vercel
        echo "Pulling Vercel environment..."
        vercel pull --yes --environment=production --token=${{ secrets.VERCEL_TOKEN }}
        echo "Building client..."
        vercel build --prod --token=${{ secrets.VERCEL_TOKEN }}
        echo "Deploying client..."
        vercel deploy --prebuilt --prod --token=${{ secrets.VERCEL_TOKEN }}
      env:
        VERCEL_ORG_ID: ${{ secrets.VERCEL_ORG_ID }}
        VERCEL_PROJECT_ID: ${{ secrets.VERCEL_CLIENT_PROJECT_ID }}

    # Deploy server to Vercel
    - name: Deploy Server to Vercel
      working-directory: ./server
      run: |
        echo "Installing Vercel CLI..."
        npm i -g vercel
        echo "Pulling Vercel environment..."
        vercel pull --yes --environment=production --token=${{ secrets.VERCEL_TOKEN }}
        echo "Building server..."
        vercel build --prod --token=${{ secrets.VERCEL_TOKEN }}
        echo "Deploying server..."
        vercel deploy --prebuilt --prod --token=${{ secrets.VERCEL_TOKEN }}
      env:
        VERCEL_ORG_ID: ${{ secrets.VERCEL_ORG_ID }}
        VERCEL_PROJECT_ID: ${{ secrets.VERCEL_SERVER_PROJECT_ID }}


